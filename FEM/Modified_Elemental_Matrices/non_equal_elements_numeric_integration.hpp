#if !defined(_MOD_POTENTIAL_MATRICES_H_)
#define _MOD_POTENTIAL_MATRICES_H_

#include<cmath>

double *nonEqualNumericElementalMatrices(double *x,double *v, int order,int z) {

	int P = order + 1;

	double *matV = new double[P*P];
	switch(order)
	{
	     case 2:
		     {
			     double x0,x1,x2,v0,v1,v2;
			     x0 = x[0]; x1=x[1]; x2 = x[2];
			     v0 = v[0]; v1=v[1]; v2=v[2];
		    
		     	 
				matV[0] = -0.002380952380952381*((x0 - x2)*(v1*pow(x0 - x2,2)*(10*pow(x0,2) - 28*x0*x1 + 21*pow(x1,2) + 8*x0*x2 - 14*x1*x2 + 3*pow(x2,2)) +
						3*v0*(x1-x2)*(20*pow(x0,3)-35*pow(x1,3) + 21*pow(x1,2)*x2 - 7*x1*pow(x2,2) + pow(x2,3) + 10*pow(x0,2)*(-7*x1 + x2) + 4*x0*(21*pow(x1,2) - 7*x1*x2 + pow(x2,2))) -
						v2*(x0-x1)*(10*pow(x0,3)-35*pow(x1,3)-6*pow(x0,2)*(7*x1-2*x2)+42*pow(x1,2)*x2-21*x1*pow(x2,2)+4*pow(x2,3)+x0*(63*pow(x1,2)-42*x1*x2+9*pow(x2,2)))))/(pow(x0-x1,3)*(x1-x2));	


				matV[1] = -0.002380952380952381*(pow(x[0] - x[2],3)*(v[1]*pow(x[0] - x[2],2)*(4*x[0] - 7*x[1] + 3*x[2]) - 2*v[2]*(x[0] - x[1])*(2*pow(x[0],2) -
							7*x[0]*x[1] + 7*pow(x[1],2) + 3*x[0]*x[2] - 7*x[1]*x[2] + 2*pow(x[2],2)) + 
							v[0]*(x[1] - x[2])*(10*pow(x[0],2) - 28*x[0]*x[1] + 21*pow(x[1],2) + 8*x[0]*x[2] - 14*x[1]*x[2] + 3*pow(x[2],2))))/(pow(x[0] - x[1],3)*pow(x[1] - x[2],2));

				matV[2] = ((x[0] - x[2])*(2*v[1]*pow(x[0] - x[2],2)*(2*pow(x[0],2) - 7*x[0]*x[1] + 7*pow(x[1],2) + 3*x[0]*x[2] - 7*x[1]*x[2] + 2*pow(x[2],2)) - 
							v[2]*(x[0] - x[1])*(4*pow(x[0],3) - 35*pow(x[1],3) + 63*pow(x[1],2)*x[2] - 42*x[1]*pow(x[2],2) + 10*pow(x[2],3) + pow(x[0],2)*(-21*x[1] + 9*x[2]) +
							6*x[0]*(7*pow(x[1],2) - 7*x[1]*x[2] + 2*pow(x[2],2))) + v[0]*(x[1] - x[2])*(10*pow(x[0],3) - 35*pow(x[1],3) - 6*pow(x[0],2)*(7*x[1] - 2*x[2]) +
							42*pow(x[1],2)*x[2] - 21*x[1]*pow(x[2],2) + 4*pow(x[2],3) + x[0]*(63*pow(x[1],2) - 42*x[1]*x[2] + 9*pow(x[2],2)))))/(420.*pow(x[0]-x[1],2)*pow(x[1]-x[2],2));

				matV[3] = matV[1];
				matV[4] = -0.002380952380952381*(pow(x[0] - x[2],5)*(3*v[1]*pow(x[0] - x[2],2) + v[0]*(x[1] - x[2])*(4*x[0] - 7*x[1] + 3*x[2]) -
							v[2]*(x[0] - x[1])*(3*x[0] - 7*x[1] + 4*x[2])))/(pow(x[0] - x[1],3)*pow(x[1] - x[2],3));
				matV[5] = (pow(x[0]-x[2],3)*(v[1]*pow(x[0]-x[2],2)*(3*x[0]-7*x[1]+4*x[2])+2*v[0]*(x[1]-x[2])*(2*pow(x[0],2)-7*x[0]*x[1]+7*pow(x[1],2) +
							3*x[0]*x[2]-7*x[1]*x[2]+2*pow(x[2],2))-v[2]*(x[0]-x[1])*(3*pow(x[0],2) - 
							14*x[0]*x[1]+21*pow(x[1],2)+8*x[0]*x[2]-28*x[1]*x[2]+10*pow(x[2],2))))/(420.*pow(x[0]-x[1],2)*pow(x[1]-x[2],3));

				matV[6] = matV[2];

				matV[7] = matV[5];
				matV[8] = -0.002380952380952381*((x[0]-x[2])*(v[1]*pow(x[0]-x[2],2)*(3*pow(x[0],2)-14*x[0]*x[1]+21*pow(x[1],2)+8*x[0]*x[2]-28*x[1]*x[2]+10*pow(x[2],2)) +
						v[0]*(x[1] - x[2])*(4*pow(x[0],3) - 35*pow(x[1],3) + 63*pow(x[1],2)*x[2] - 42*x[1]*pow(x[2],2) + 10*pow(x[2],3) +
						pow(x[0],2)*(-21*x[1] + 9*x[2]) + 6*x[0]*(7*pow(x[1],2) - 7*x[1]*x[2] + 2*pow(x[2],2))) -
						3*v[2]*(x[0] - x[1])*(pow(x[0],3) - 35*pow(x[1],3) + 84*pow(x[1],2)*x[2] - 70*x[1]*pow(x[2],2) +
						20*pow(x[2],3) + pow(x[0],2)*(-7*x[1] + 4*x[2]) + x[0]*(21*pow(x[1],2) - 28*x[1]*x[2] + 10*pow(x[2],2)))))/((x[0] - x[1])*pow(x[1] - x[2],3));
			
				   	   
			break;
		     }
	     case 3:
             {       
		     	double x0,x1,x2,x3;
		     	double v0,v1,v2,v3;
		     	x0=x[0]; x1=x[1]; x2=x[2]; x3=x[3]; 
		     	v0=v[0]; v1=v[1]; v2=v[2]; v3=v[3]; 
		     	
		        
				
		     	matV[0] = ((x0 - x3)*(-(v3*(x0 - x1)*(x0 - x2)*(x1 - x2)*(28*pow(x0,6) + 210*pow(x1,3)*pow(x2,3) - 21*pow(x0,5)*(5*(x1 + x2) - 2*x3) - 
				  		252*pow(x1,2)*pow(x2,2)*(x1 + x2)*x3 + 126*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 24*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*pow(x3,3) + 
				  		45*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,4) - 30*(x1 + x2)*pow(x3,5) +  7*pow(x3,6) + 15*pow(x0,4)*(9*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) - 
			          	10*(x1 + x2)*x3 + 3*pow(x3,2)) + 10*pow(x0,3)*(-6*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2)) + 18*(pow(x1,2) + 3*x1*x2 + 
				  		pow(x2,2))*x3 - 15*(x1 + x2)*pow(x3,2) + 4*pow(x3,3)) +  6*pow(x0,2)*(42*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) - 12*(x1 + x2)*(pow(x1,2) +
				  		8*x1*x2 + pow(x2,2))*x3 + 27*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 20*(x1 + x2)*pow(x3,3) + 5*pow(x3,4)) + 
				  		3*x0*(-126*pow(x1,2)*pow(x2,2)*(x1 + x2) + 84*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*x3 - 18*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*pow(x3,2) + 
			          	36*(pow(x1,2) + + 3*x1*x2 + pow(x2,2))*pow(x3,3) - 25*(x1 + x2)*pow(x3,4) + 6*pow(x3,5)))) + v2*(x0 - x1)*pow(x0 - x3,2)*(x1 - x3)*(28*pow(x0,5) -
		  	          	126*pow(x1,3)*pow(x2,2) - 35*pow(x0,4)*(3*x1 + 2*x2 - x3) + 42*pow(x1,2)*x2*(2*x1 + 3*x2)*x3 - 18*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) + 
				  		9*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,3) - 5*(3*x1 + 2*x2)*pow(x3,4) + 3*pow(x3,5) + 5*pow(x0,3)*(9*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2)) - 
			        	8*(3*x1 + 2*x2)*x3 + 6*pow(x3,2)) + x0*(84*pow(x1,2)*x2*(2*x1 + 3*x2) - 48*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 + 27*(3*pow(x1,2) + 6*x1*x2 + 
			          	pow(x2,2))*pow(x3,2) - 16*(3*x1 + 2*x2)*pow(x3,3) + 10*pow(x3,4)) + 5*pow(x0,2)*(-12*pow(x1,3) + pow(3*x2 - 2*x3,2)*x3 + 9*pow(x1,2)*(-8*x2 + 3*x3) - 
			          	18*x1*(2*pow(x2,2) - 3*x2*x3 + pow(x3,2)))) - (x2 - x3)*(v1*(x0 - x2)*pow(x0 - x3,2)*(28*pow(x0,5) - 126*pow(x1,2)*pow(x2,3) - 
				  		35*pow(x0,4)*(2*x1 + 3*x2 - x3) + 42*x1*pow(x2,2)*(3*x1 + 2*x2)*x3 - 18*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,2) +  
				  		9*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,3) - 5*(2*x1 + 3*x2)*pow(x3,4) + 3*pow(x3,5) + 5*pow(x0,3)*(9*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2)) - 
			          	8*(2*x1 + 3*x2)*x3 + 6*pow(x3,2)) + 5*pow(x0,2)*(-12*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2)) + 9*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 - 
				  		6*(2*x1 + 3*x2)*pow(x3,2) + 4*pow(x3,3)) +  x0*(84*x1*pow(x2,2)*(3*x1 + 2*x2) - 48*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 + 27*(pow(x1,2) + 
				  		6*x1*x2 + 3*pow(x2,2))*pow(x3,2) - 16*(2*x1 + 3*x2)*pow(x3,3) + 10*pow(x3,4))) +  3*v0*(x1 - x2)*(x1 - x3)*(84*pow(x0,6) + 210*pow(x1,3)*pow(x2,3) - 
		                56*pow(x0,5)*(5*(x1 + x2) - x3) - 126*pow(x1,2)*pow(x2,2)*(x1 + x2)*x3 + 42*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 
				  		6*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*pow(x3,3) + 9*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,4) - 5*(x1 + x2)*pow(x3,5) + pow(x3,6) + 
				  		35*pow(x0,4)*(9*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) - 5*(x1 + x2)*x3 + pow(x3,2)) + 20*pow(x0,3)*(-6*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2)) + 
			          	9*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*x3 - 5*(x1 + x2)*pow(x3,2) + pow(x3,3)) + 10*pow(x0,2)*(42*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) -
				  		6*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*x3 + 9*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 5*(x1 + x2)*pow(x3,3) + pow(x3,4)) +
				  		4*x0*(-126*pow(x1,2)*pow(x2,2)*(x1 + x2) + 42*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*x3 - 6*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*pow(x3,2) + 
			          	9*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,3) - 5*(x1 + x2)*pow(x3,4) + pow(x3,5))))))/(2520.*pow(x0 - x1,3)*pow(x0 - x2,3)*(x1 - x2)*(x1 - x3)*(x2 - x3));

				matV[1] = (pow(x0 - x3,3)*(v2*(x0 - x1)*pow(x0 - x3,2)*(x1 - x3)*(7*pow(x0,4) + 42*pow(x1,2)*pow(x2,2) - 4*pow(x0,3)*(5*(x1 + x2) - 3*x3) - 36*x1*x2*(x1 + x2)*x3 + 
			          	9*(pow(x1,2) + 4*x1*x2 + pow(x2,2))*pow(x3,2) - 10*(x1 + x2)*pow(x3,3) + 3*pow(x3,4) + 3*pow(x0,2)*(5*(pow(x1,2) + 4*x1*x2 + pow(x2,2)) - 
		            	10*(x1 + x2)*x3 + 4*pow(x3,2)) + 2*x0*(-24*x1*x2*(x1 + x2) + 9*(pow(x1,2) + 4*x1*x2 + pow(x2,2))*x3 - 12*(x1 + x2)*pow(x3,2) + 4*pow(x3,3))) - 
				  		v3*(x0 - x1)*(x0 - x2)*(x1 - x2)*(7*pow(x0,5) - 84*pow(x1,2)*pow(x2,3) + 5*pow(x0,3)*(3*pow(x1,2) + 2*x1*(9*x2 - 4*x3) + pow(3*x2 - 2*x3,2)) - 
			        	5*pow(x0,4)*(4*x1 + 6*x2 - 3*x3) + 42*x1*pow(x2,2)*(3*x1 + 2*x2)*x3 - 24*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,2) + 15*(pow(x1,2) + 6*x1*x2 + 
			          	3*pow(x2,2))*pow(x3,3) - 10*(2*x1 + 3*x2)*pow(x3,4) + 7*pow(x3,5) + pow(x0,2)*(-24*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2)) + 27*(pow(x1,2) + 6*x1*x2 + 
                        3*pow(x2,2))*x3 - 24*(2*x1 + 3*x2)*pow(x3,2) + 20*pow(x3,3)) + x0*(42*x1*pow(x2,2)*(3*x1 + 2*x2) - 36*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 + 
                        27*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) - 20*(2*x1 + 3*x2)*pow(x3,3) + 15*pow(x3,4))) - (x2 - x3)*(v1*(x0 - x2)*pow(x0 - x3,2)*(7*pow(x0,4) + 
                        42*x1*pow(x2,3) - 2*pow(x0,3)*(5*x1 + 15*x2 - 6*x3) - 18*pow(x2,2)*(3*x1 + x2)*x3 + 27*x2*(x1 + x2)*pow(x3,2) - 5*(x1 + 3*x2)*pow(x3,3) + 3*pow(x3,4) + 
                        3*pow(x0,2)*(15*x2*(x1 + x2) - 5*(x1 + 3*x2)*x3 + 4*pow(x3,2)) + 2*x0*(-12*pow(x2,2)*(3*x1 + x2) + 27*x2*(x1 + x2)*x3 - 6*(x1 + 3*x2)*pow(x3,2) + 4*pow(x3,3))) + 
			          	v0*(x1 - x2)*(x1 - x3)*(28*pow(x0,5) - 126*pow(x1,2)*pow(x2,3) - 35*pow(x0,4)*(2*x1 + 3*x2 - x3) + 42*x1*pow(x2,2)*(3*x1 + 2*x2)*x3 - 18*x2*(3*pow(x1,2) + 
                        6*x1*x2 + pow(x2,2))*pow(x3,2) + 9*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,3) - 5*(2*x1 + 3*x2)*pow(x3,4) + 3*pow(x3,5) + 5*pow(x0,3)*(9*(pow(x1,2) + 
                        6*x1*x2 + 3*pow(x2,2)) - 8*(2*x1 + 3*x2)*x3 + 6*pow(x3,2)) + 5*pow(x0,2)*(-12*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2)) + 9*(pow(x1,2) + 6*x1*x2 + 
                        3*pow(x2,2))*x3 - 6*(2*x1 + 3*x2)*pow(x3,2) + 4*pow(x3,3)) + x0*(84*x1*pow(x2,2)*(3*x1 + 2*x2) - 48*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 + 
                        27*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) - 16*(2*x1 + 3*x2)*pow(x3,3) + 
                        10*pow(x3,4))))))/(2520.*pow(x0 - x1,3)*pow(x0 - x2,2)*pow(x1 - x2,2)*pow(x1 - x3,2)*(x2 - x3));

				matV[2] = (pow(x0 - x3,3)*(-(v2*(x0 - x1)*pow(x0 - x3,2)*(x1 - x3)*(7*pow(x0,4) + 42*pow(x1,3)*x2 - 2*pow(x0,3)*(15*x1 + 5*x2 - 6*x3) - 18*pow(x1,2)*(x1 + 3*x2)*x3 + 
				 		27*x1*(x1 + x2)*pow(x3,2) - 5*(3*x1 + x2)*pow(x3,3) + 3*pow(x3,4) + 3*pow(x0,2)*(15*x1*(x1 + x2) - 5*(3*x1 + x2)*x3 + 4*pow(x3,2)) + 
				 		2*x0*(-12*pow(x1,2)*(x1 + 3*x2) + 27*x1*(x1 + x2)*x3 - 6*(3*x1 + x2)*pow(x3,2) + 4*pow(x3,3)))) + v3*(x0 - x1)*(x0 - x2)*(x1 - x2)*(7*pow(x0,5) - 
			         	84*pow(x1,3)*pow(x2,2) - 5*pow(x0,4)*(6*x1 + 4*x2 - 3*x3) + 42*pow(x1,2)*x2*(2*x1 + 3*x2)*x3 - 24*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) + 
				 		15*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,3) - 10*(3*x1 + 2*x2)*pow(x3,4) + 7*pow(x3,5) + 5*pow(x0,3)*(9*pow(x1,2) + 18*x1*x2 + 3*pow(x2,2) - 
		                12*x1*x3 - 8*x2*x3 + 4*pow(x3,2)) + pow(x0,2)*(-24*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2)) + 27*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 - 
				 		24*(3*x1 + 2*x2)*pow(x3,2) + 20*pow(x3,3)) + x0*(42*pow(x1,2)*x2*(2*x1 + 3*x2) - 36*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 + 27*(3*pow(x1,2) + 
			         	6*x1*x2 + pow(x2,2))*pow(x3,2) - 20*(3*x1 + 2*x2)*pow(x3,3) + 15*pow(x3,4))) - (x2 - x3)*(-(v1*(x0 - x2)*pow(x0 - x3,2)*(7*pow(x0,4) + 
				 		42*pow(x1,2)*pow(x2,2) - 4*pow(x0,3)*(5*(x1 + x2) - 3*x3) - 36*x1*x2*(x1 + x2)*x3 + 9*(pow(x1,2) + 4*x1*x2 + pow(x2,2))*pow(x3,2) - 10*(x1 + x2)*pow(x3,3) + 
				 		3*pow(x3,4) + 3*pow(x0,2)*(5*(pow(x1,2) + 4*x1*x2 + pow(x2,2)) - 10*(x1 + x2)*x3 + 4*pow(x3,2)) + 2*x0*(-24*x1*x2*(x1 + x2) + 9*(pow(x1,2) + 4*x1*x2 + 
			         	pow(x2,2))*x3 - 12*(x1 + x2)*pow(x3,2) + 4*pow(x3,3)))) - v0*(x1 - x2)*(x1 - x3)*(28*pow(x0,5) - 126*pow(x1,3)*pow(x2,2) - 35*pow(x0,4)*(3*x1 + 2*x2 - x3) + 
	                    42*pow(x1,2)*x2*(2*x1 + 3*x2)*x3 - 18*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) + 9*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,3) - 
				 		5*(3*x1 + 2*x2)*pow(x3,4) + 3*pow(x3,5) + 5*pow(x0,3)*(9*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2)) - 8*(3*x1 + 2*x2)*x3 + 6*pow(x3,2)) + 
				 		x0*(84*pow(x1,2)*x2*(2*x1 + 3*x2) - 48*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 + 27*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,2) - 
		                16*(3*x1 + 2*x2)*pow(x3,3) + 10*pow(x3,4)) + 5*pow(x0,2)*(-12*pow(x1,3) + pow(3*x2 - 2*x3,2)*x3 + 9*pow(x1,2)*(-8*x2 + 3*x3) - 18*x1*(2*pow(x2,2) - 
				 		3*x2*x3 + pow(x3,2)))))))/(2520.*pow(x0 - x1,2)*pow(x0 - x2,3)*pow(x1 - x2,2)*(x1 - x3)*pow(x2 - x3,2));

				matV[3] = ((x0 - x3)*(-(v3*(x0 - x1)*(x0 - x2)*(x1 - x2)*(7*pow(x0,6) + 210*pow(x1,3)*pow(x2,3) - 6*pow(x0,5)*(5*(x1 + x2) - 3*x3) - 
		                378*pow(x1,2)*pow(x2,2)*(x1 + x2)*x3 + 252*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 60*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + 
			            pow(x2,2))*pow(x3,3) + 135*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,4) - 105*(x1 + x2)*pow(x3,5) + 28*pow(x3,6) + 15*pow(x0,4)*(3*(pow(x1,2) + 3*x1*x2 + 
			            pow(x2,2)) - 5*(x1 + x2)*x3 + 2*pow(x3,2)) + 4*pow(x0,3)*(-6*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2)) + 27*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*x3 - 
				        30*(x1 + x2)*pow(x3,2) + 10*pow(x3,3)) - 6*x0*(x1 + x2 - x3)*(42*pow(x1,2)*pow(x2,2) - 42*x1*x2*(x1 + x2)*x3 + 6*(2*pow(x1,2) + 9*x1*x2 + 
				        2*pow(x2,2))*pow(x3,2) - 18*(x1 + x2)*pow(x3,3) + 7*pow(x3,4)) + 3*pow(x0,2)*(42*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) - 
				        18*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*x3 + 54*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 50*(x1 + x2)*pow(x3,3) + 15*pow(x3,4)))) + 
				        v2*(x0 - x1)*pow(x0 - x3,2)*(x1 - x3)*(7*pow(x0,5) - 84*pow(x1,3)*pow(x2,2) - 5*pow(x0,4)*(6*x1 + 4*x2 - 3*x3) + 
				        42*pow(x1,2)*x2*(2*x1 + 3*x2)*x3 - 24*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) + 15*(3*pow(x1,2) + 6*x1*x2 + 
				        pow(x2,2))*pow(x3,3) - 10*(3*x1 + 2*x2)*pow(x3,4) + 7*pow(x3,5) + 5*pow(x0,3)*(9*pow(x1,2) + 18*x1*x2 + 3*pow(x2,2) - 12*x1*x3 - 8*x2*x3 + 4*pow(x3,2)) + 
				        pow(x0,2)*(-24*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2)) + 27*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 - 24*(3*x1 + 2*x2)*pow(x3,2) + 20*pow(x3,3)) + 
				        x0*(42*pow(x1,2)*x2*(2*x1 + 3*x2) - 36*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 + 27*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,2) - 
			            20*(3*x1 + 2*x2)*pow(x3,3) + 15*pow(x3,4))) - (x2 - x3)*(v1*(x0 - x2)*pow(x0 - x3,2)*(7*pow(x0,5) - 84*pow(x1,2)*pow(x2,3) + 5*pow(x0,3)*(3*pow(x1,2) + 
			            2*x1*(9*x2 - 4*x3) + pow(3*x2 - 2*x3,2)) - 5*pow(x0,4)*(4*x1 + 6*x2 - 3*x3) + 42*x1*pow(x2,2)*(3*x1 + 2*x2)*x3 - 24*x2*(3*pow(x1,2) + 6*x1*x2 + 
				        pow(x2,2))*pow(x3,2) + 15*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,3) - 10*(2*x1 + 3*x2)*pow(x3,4) + 7*pow(x3,5) + pow(x0,2)*(-24*x2*(3*pow(x1,2) + 
			            6*x1*x2 + pow(x2,2)) + 27*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 - 24*(2*x1 + 3*x2)*pow(x3,2) + 20*pow(x3,3)) + x0*(42*x1*pow(x2,2)*(3*x1 + 2*x2) - 
			            36*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 + 27*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) - 20*(2*x1 + 3*x2)*pow(x3,3) + 15*pow(x3,4))) + 
			            v0*(x1 - x2)*(x1 - x3)*(28*pow(x0,6) + 210*pow(x1,3)*pow(x2,3) - 21*pow(x0,5)*(5*(x1 + x2) - 2*x3) - 252*pow(x1,2)*pow(x2,2)*(x1 + x2)*x3 + 
			            126*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 24*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*pow(x3,3) + 45*(pow(x1,2) + 3*x1*x2 + 
		                pow(x2,2))*pow(x3,4) - 30*(x1 + x2)*pow(x3,5) + 7*pow(x3,6) + 15*pow(x0,4)*(9*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) - 10*(x1 + x2)*x3 + 3*pow(x3,2)) + 
				        10*pow(x0,3)*(-6*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2)) + 18*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*x3 - 15*(x1 + x2)*pow(x3,2) + 4*pow(x3,3)) + 
				        6*pow(x0,2)*(42*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) - 12*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*x3 + 27*(pow(x1,2) + 3*x1*x2 + 
				        pow(x2,2))*pow(x3,2) - 20*(x1 + x2)*pow(x3,3) + 5*pow(x3,4)) + 3*x0*(-126*pow(x1,2)*pow(x2,2)*(x1 + x2) + 84*x1*x2*(pow(x1,2) + 3*x1*x2 + 
				        pow(x2,2))*x3 - 18*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*pow(x3,2) + 36*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,3) - 25*(x1 + x2)*pow(x3,4) + 
			            6*pow(x3,5))))))/(2520.*pow(x0 - x1,2)*pow(x0 - x2,2)*(x1 - x2)*pow(x1 - x3,2)*pow(x2 - x3,2));
				matV[4] = matV[1];

				matV[5] = (pow(x0 - x3,5)*(v2*(x0 - x1)*pow(x0 - x3,2)*(x1 - x3)*(3*pow(x0,3) - 18*x1*pow(x2,2) + 9*x2*(2*x1 + x2)*x3 - 5*(x1 + 2*x2)*pow(x3,2) + 3*pow(x3,3) + 
			         	pow(x0,2)*(-5*(x1 + 2*x2) + 6*x3) + x0*(9*x2*(2*x1 + x2) - 8*(x1 + 2*x2)*x3 + 6*pow(x3,2))) - v3*(x0 - x1)*(x0 - x2)*(x1 - x2)*(3*pow(x0,4) + 42*x1*pow(x2,3) + 
				 		3*pow(x0,2)*(x1*(9*x2 - 4*x3) + pow(3*x2 - 2*x3,2)) - 24*pow(x2,2)*(3*x1 + x2)*x3 + 45*x2*(x1 + x2)*pow(x3,2) - 10*(x1 + 3*x2)*pow(x3,3) + 7*pow(x3,4) + 
				 		pow(x0,3)*(-5*(x1 + 3*x2) + 8*x3) + 3*x0*(-6*pow(x2,2)*(3*x1 + x2) + 18*x2*(x1 + x2)*x3 - 5*(x1 + 3*x2)*pow(x3,2) + 4*pow(x3,3))) - 
				 		(x2 - x3)*(3*v1*(x0 - x2)*pow(x0 - x3,2)*(x0 - 2*x2 + x3)*(pow(x0,2) + 3*pow(x2,2) - 3*x2*x3 + pow(x3,2) + x0*(-3*x2 + x3)) + 
			         	v0*(x1 - x2)*(x1 - x3)*(7*pow(x0,4) + 42*x1*pow(x2,3) - 2*pow(x0,3)*(5*x1 + 15*x2 - 6*x3) - 18*pow(x2,2)*(3*x1 + x2)*x3 + 27*x2*(x1 + x2)*pow(x3,2) - 
			         	5*(x1 + 3*x2)*pow(x3,3) + 3*pow(x3,4) + 3*pow(x0,2)*(15*x2*(x1 + x2) - 5*(x1 + 3*x2)*x3 + 4*pow(x3,2)) + 2*x0*(-12*pow(x2,2)*(3*x1 + x2) + 27*x2*(x1 + x2)*x3 - 
			         	6*(x1 + 3*x2)*pow(x3,2) + 4*pow(x3,3))))))/(2520.*pow(x0 - x1,3)*(x0 - x2)*pow(x1 - x2,3)*pow(x1 - x3,3)*(x2 - x3));

				matV[6] = -0.0003968253968253968*(pow(x0 - x3,5)*(-(v3*(x0 - x1)*(x0 - x2)*(x1 - x2)*(3*pow(x0,4) + 42*pow(x1,2)*pow(x2,2) - 2*pow(x0,3)*(5*(x1 + x2) - 4*x3) - 
				  			48*x1*x2*(x1 + x2)*x3 + 15*(pow(x1,2) + 4*x1*x2 + pow(x2,2))*pow(x3,2) - 20*(x1 + x2)*pow(x3,3) + 7*pow(x3,4) - 6*x0*(x1 + x2 - x3)*(6*x1*x2 - 3*(x1 + x2)*x3 + 
				  			2*pow(x3,2)) + 3*pow(x0,2)*(3*(pow(x1,2) + 4*x1*x2 + pow(x2,2)) - 8*(x1 + x2)*x3 + 4*pow(x3,2)))) + v2*(x0 - x1)*pow(x0 - x3,2)*(x1 - x3)*(3*pow(x0,3) - 
		                  	18*pow(x1,2)*x2 + 9*x1*(x1 + 2*x2)*x3 - 5*(2*x1 + x2)*pow(x3,2) + 3*pow(x3,3) + pow(x0,2)*(-5*(2*x1 + x2) + 6*x3) + x0*(9*x1*(x1 + 2*x2) - 8*(2*x1 + x2)*x3 + 
			          		6*pow(x3,2))) + (x2 - x3)*(-(v1*(x0 - x2)*pow(x0 - x3,2)*(3*pow(x0,3) - 18*x1*pow(x2,2) + 9*x2*(2*x1 + x2)*x3 - 5*(x1 + 2*x2)*pow(x3,2) + 3*pow(x3,3) + 
			          		pow(x0,2)*(-5*(x1 + 2*x2) + 6*x3) + x0*(9*x2*(2*x1 + x2) - 8*(x1 + 2*x2)*x3 + 6*pow(x3,2)))) - v0*(x1 - x2)*(x1 - x3)*(7*pow(x0,4) + 42*pow(x1,2)*pow(x2,2) - 
			          		4*pow(x0,3)*(5*(x1 + x2) - 3*x3) - 36*x1*x2*(x1 + x2)*x3 + 9*(pow(x1,2) + 4*x1*x2 + pow(x2,2))*pow(x3,2) - 10*(x1 + x2)*pow(x3,3) + 3*pow(x3,4) + 
				  			3*pow(x0,2)*(5*(pow(x1,2) + 4*x1*x2 + pow(x2,2)) - 10*(x1 + x2)*x3 + 4*pow(x3,2)) + 2*x0*(-24*x1*x2*(x1 + x2) + 9*(pow(x1,2) + 4*x1*x2 + pow(x2,2))*x3 - 
		                  	12*(x1 + x2)*pow(x3,2) + 4*pow(x3,3))))))/(pow(x0 - x1,2)*pow(x0 - x2,2)*pow(x1 - x2,3)*pow(x1 - x3,2)*pow(x2 - x3,2));

				matV[7] = (pow(x0 - x3,3)*(v2*(x0 - x1)*pow(x0 - x3,2)*(x1 - x3)*(3*pow(x0,4) + 42*pow(x1,2)*pow(x2,2) - 2*pow(x0,3)*(5*(x1 + x2) - 4*x3) - 48*x1*x2*(x1 + x2)*x3 + 
				  		  15*(pow(x1,2) + 4*x1*x2 + pow(x2,2))*pow(x3,2) - 20*(x1 + x2)*pow(x3,3) + 7*pow(x3,4) - 6*x0*(x1 + x2 - x3)*(6*x1*x2 - 3*(x1 + x2)*x3 + 2*pow(x3,2)) + 
				  		  3*pow(x0,2)*(3*(pow(x1,2) + 4*x1*x2 + pow(x2,2)) - 8*(x1 + x2)*x3 + 4*pow(x3,2))) - v3*(x0 - x1)*(x0 - x2)*(x1 - x2)*(3*pow(x0,5) - 
				  		  126*pow(x1,2)*pow(x2,3) - 5*pow(x0,4)*(2*x1 + 3*x2 - 2*x3) + 84*x1*pow(x2,2)*(3*x1 + 2*x2)*x3 - 60*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,2) + 
				          45*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,3) - 35*(2*x1 + 3*x2)*pow(x3,4) + 28*pow(x3,5) + pow(x0,3)*(9*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2)) - 
			              16*(2*x1 + 3*x2)*x3 + 20*pow(x3,2)) + 3*pow(x0,2)*(-6*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2)) + 9*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 - 
				          10*(2*x1 + 3*x2)*pow(x3,2) + 10*pow(x3,3)) + x0*(42*x1*pow(x2,2)*(3*x1 + 2*x2) - 48*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 + 45*(pow(x1,2) + 
			              6*x1*x2 + 3*pow(x2,2))*pow(x3,2) - 40*(2*x1 + 3*x2)*pow(x3,3) + 35*pow(x3,4))) - (x2 - x3)*(v1*(x0 - x2)*pow(x0 - x3,2)*(3*pow(x0,4) + 42*x1*pow(x2,3) - 
			              24*pow(x2,2)*(3*x1 + x2)*x3 + 45*x2*(x1 + x2)*pow(x3,2) - 10*(x1 + 3*x2)*pow(x3,3) + 7*pow(x3,4) + pow(x0,3)*(-5*(x1 + 3*x2) + 8*x3) + 
				  		  3*pow(x0,2)*(9*x2*(x1 + x2) - 4*(x1 + 3*x2)*x3 + 4*pow(x3,2)) + 3*x0*(-6*pow(x2,2)*(3*x1 + x2) + 18*x2*(x1 + x2)*x3 - 5*(x1 + 3*x2)*pow(x3,2) + 
				  		  4*pow(x3,3))) + v0*(x1 - x2)*(x1 - x3)*(7*pow(x0,5) - 84*pow(x1,2)*pow(x2,3) + 5*pow(x0,3)*(3*pow(x1,2) + 2*x1*(9*x2 - 4*x3) + pow(3*x2 - 2*x3,2)) - 
			          	  5*pow(x0,4)*(4*x1 + 6*x2 - 3*x3) + 42*x1*pow(x2,2)*(3*x1 + 2*x2)*x3 - 24*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,2) + 15*(pow(x1,2) + 6*x1*x2 + 
		                  3*pow(x2,2))*pow(x3,3) - 10*(2*x1 + 3*x2)*pow(x3,4) + 7*pow(x3,5) + pow(x0,2)*(-24*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2)) + 27*(pow(x1,2) + 6*x1*x2 + 
			              3*pow(x2,2))*x3 - 24*(2*x1 + 3*x2)*pow(x3,2) + 20*pow(x3,3)) + x0*(42*x1*pow(x2,2)*(3*x1 + 2*x2) - 36*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 + 
			              27*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) - 
				          20*(2*x1 + 3*x2)*pow(x3,3) + 15*pow(x3,4))))))/(2520.*pow(x0 - x1,2)*(x0 - x2)*pow(x1 - x2,2)*pow(x1 - x3,3)*pow(x2 - x3,2));
			    matV[8] = matV[2];
			    matV[9] = matV[6];

			    matV[10] = (pow(x0 - x3,5)*(3*v2*(x0 - x1)*pow(x0 - x3,2)*(x1 - x3)*(x0 - 2*x1 + x3)*(pow(x0,2) + 3*pow(x1,2) - 3*x1*x3 + pow(x3,2) + x0*(-3*x1 + x3)) - 
							v3*(x0 - x1)*(x0 - x2)*(x1 - x2)*(3*pow(x0,4) + 42*pow(x1,3)*x2 - 24*pow(x1,2)*(x1 + 3*x2)*x3 + 45*x1*(x1 + x2)*pow(x3,2) - 10*(3*x1 + x2)*pow(x3,3) + 
							7*pow(x3,4) + pow(x0,3)*(-5*(3*x1 + x2) + 8*x3) + 3*pow(x0,2)*(9*x1*(x1 + x2) - 4*(3*x1 + x2)*x3 + 4*pow(x3,2)) + 3*x0*(-6*pow(x1,2)*(x1 + 3*x2) + 
							18*x1*(x1 + x2)*x3 - 5*(3*x1 + x2)*pow(x3,2) + 4*pow(x3,3))) - (x2 - x3)*(v1*(x0 - x2)*pow(x0 - x3,2)*(3*pow(x0,3) - 18*pow(x1,2)*x2 + 9*x1*(x1 + 2*x2)*x3 - 
							5*(2*x1 + x2)*pow(x3,2) + 3*pow(x3,3) + pow(x0,2)*(-5*(2*x1 + x2) + 6*x3) + x0*(9*x1*(x1 + 2*x2) - 8*(2*x1 + x2)*x3 + 6*pow(x3,2))) + 
							v0*(x1 - x2)*(x1 - x3)*(7*pow(x0,4) + 42*pow(x1,3)*x2 - 2*pow(x0,3)*(15*x1 + 5*x2 - 6*x3) - 18*pow(x1,2)*(x1 + 3*x2)*x3 + 27*x1*(x1 + x2)*pow(x3,2) - 
							5*(3*x1 + x2)*pow(x3,3) + 3*pow(x3,4) + 3*pow(x0,2)*(15*x1*(x1 + x2) - 5*(3*x1 + x2)*x3 + 4*pow(x3,2)) + 2*x0*(-12*pow(x1,2)*(x1 + 3*x2) + 
							27*x1*(x1 + x2)*x3 - 6*(3*x1 + x2)*pow(x3,2) + 4*pow(x3,3))))))/(2520.*(x0 - x1)*pow(x0 - x2,3)*pow(x1 - x2,3)*(x1 - x3)*pow(x2 - x3,3));

			    matV[11] = (pow(x0 - x3,3)*(-(v2*(x0 - x1)*pow(x0 - x3,2)*(x1 - x3)*(3*pow(x0,4) + 42*pow(x1,3)*x2 - 24*pow(x1,2)*(x1 + 3*x2)*x3 + 45*x1*(x1 + x2)*pow(x3,2) - 
							10*(3*x1 + x2)*pow(x3,3) + 7*pow(x3,4) + pow(x0,3)*(-5*(3*x1 + x2) + 8*x3) + 3*pow(x0,2)*(9*x1*(x1 + x2) - 4*(3*x1 + x2)*x3 + 4*pow(x3,2)) + 
							3*x0*(-6*pow(x1,2)*(x1 + 3*x2) + 18*x1*(x1 + x2)*x3 - 5*(3*x1 + x2)*pow(x3,2) + 4*pow(x3,3)))) + v3*(x0 - x1)*(x0 - x2)*(x1 - x2)*(3*pow(x0,5) - 
							126*pow(x1,3)*pow(x2,2) - 5*pow(x0,4)*(3*x1 + 2*x2 - 2*x3) + 84*pow(x1,2)*x2*(2*x1 + 3*x2)*x3 - 60*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) + 
							45*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,3) - 35*(3*x1 + 2*x2)*pow(x3,4) + 28*pow(x3,5) + pow(x0,3)*(9*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2)) - 
							16*(3*x1 + 2*x2)*x3 + 20*pow(x3,2)) + 3*pow(x0,2)*(-6*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2)) + 9*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 - 
							10*(3*x1 + 2*x2)*pow(x3,2) + 10*pow(x3,3)) + x0*(42*pow(x1,2)*x2*(2*x1 + 3*x2) - 48*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 + 45*(3*pow(x1,2) + 
							6*x1*x2 + pow(x2,2))*pow(x3,2) - 40*(3*x1 + 2*x2)*pow(x3,3) + 35*pow(x3,4))) - (x2 - x3)*(-(v1*(x0 - x2)*pow(x0 - x3,2)*(3*pow(x0,4) + 
							42*pow(x1,2)*pow(x2,2) - 2*pow(x0,3)*(5*(x1 + x2) - 4*x3) - 48*x1*x2*(x1 + x2)*x3 + 15*(pow(x1,2) + 4*x1*x2 + pow(x2,2))*pow(x3,2) - 
							20*(x1 + x2)*pow(x3,3) + 7*pow(x3,4) - 6*x0*(x1 + x2 - x3)*(6*x1*x2 - 3*(x1 + x2)*x3 + 2*pow(x3,2)) + 3*pow(x0,2)*(3*(pow(x1,2) + 4*x1*x2 + pow(x2,2)) - 
							8*(x1 + x2)*x3 + 4*pow(x3,2)))) + v0*(x1 - x2)*(x1 - x3)*(-7*pow(x0,5) + 84*pow(x1,3)*pow(x2,2) + 5*pow(x0,4)*(6*x1 + 4*x2 - 3*x3) - 
							42*pow(x1,2)*x2*(2*x1 + 3*x2)*x3 + 24*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) - 15*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,3) + 
							10*(3*x1 + 2*x2)*pow(x3,4) - 7*pow(x3,5) - 5*pow(x0,3)*(9*pow(x1,2) + 18*x1*x2 + 3*pow(x2,2) - 12*x1*x3 - 8*x2*x3 + 4*pow(x3,2)) + 
							pow(x0,2)*(24*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2)) - 27*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 + 24*(3*x1 + 2*x2)*pow(x3,2) - 20*pow(x3,3)) + 
							x0*(-42*pow(x1,2)*x2*(2*x1 + 3*x2) + 36*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 - 27*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,2) + 
							20*(3*x1 + 2*x2)*pow(x3,3) - 15*pow(x3,4))))))/(2520.*(x0 - x1)*pow(x0 - x2,2)*pow(x1 - x2,2)*pow(x1 - x3,2)*pow(x2 - x3,3));
				matV[12] = matV[3];
				matV[13] = matV[7];
				matV[14] = matV[11];

				matV[15] = -0.0003968253968253968*((x0 - x3)*(-(v2*(x0 - x1)*pow(x0 - x3,2)*(x1 - x3)*(3*pow(x0,5) - 126*pow(x1,3)*pow(x2,2) - 5*pow(x0,4)*(3*x1 + 2*x2 - 2*x3) + 
			           		84*pow(x1,2)*x2*(2*x1 + 3*x2)*x3 - 60*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) + 45*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,3) - 
				   	   		35*(3*x1 + 2*x2)*pow(x3,4) + 28*pow(x3,5) + pow(x0,3)*(9*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2)) - 16*(3*x1 + 2*x2)*x3 + 20*pow(x3,2)) + 
				   			3*pow(x0,2)*(-6*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2)) + 9*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*x3 - 10*(3*x1 + 2*x2)*pow(x3,2) + 10*pow(x3,3)) + 
				   			x0*(42*pow(x1,2)*x2*(2*x1 + 3*x2) - 48*x1*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 + 45*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,2) - 
				   			40*(3*x1 + 2*x2)*pow(x3,3) + 35*pow(x3,4)))) + 3*v3*(x0 - x1)*(x0 - x2)*(x1 - x2)*(pow(x0,6) + 210*pow(x1,3)*pow(x2,3) - 
		                    504*pow(x1,2)*pow(x2,2)*(x1 + x2)*x3 + 420*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 120*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + 
				   		    pow(x2,2))*pow(x3,3) + 315*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,4) - 280*(x1 + x2)*pow(x3,5) + 84*pow(x3,6) + pow(x0,5)*(-5*(x1 + x2) + 4*x3) + 
				            pow(x0,4)*(9*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) - 20*(x1 + x2)*x3 + 10*pow(x3,2)) - 2*pow(x0,3)*(x1 + x2 - x3)*(3*(pow(x1,2) + 8*x1*x2 + pow(x2,2)) - 
			                15*(x1 + x2)*x3 + 10*pow(x3,2)) + pow(x0,2)*(42*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) - 24*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*x3 + 
				            90*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 100*(x1 + x2)*pow(x3,3) + 35*pow(x3,4)) + x0*(-126*pow(x1,2)*pow(x2,2)*(x1 + x2) + 
				            168*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*x3 - 60*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*pow(x3,2) + 180*(pow(x1,2) + 3*x1*x2 + 
			                pow(x2,2))*pow(x3,3) - 175*(x1 + x2)*pow(x3,4) + 56*pow(x3,5))) + (x2 - x3)*(v0*(x1 - x2)*(x1 - x3)*(7*pow(x0,6) + 210*pow(x1,3)*pow(x2,3) - 
			                6*pow(x0,5)*(5*(x1 + x2) - 3*x3) - 378*pow(x1,2)*pow(x2,2)*(x1 + x2)*x3 + 252*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 60*(x1 + x2)*(pow(x1,2) + 
			                8*x1*x2 + pow(x2,2))*pow(x3,3) + 135*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,4) - 105*(x1 + x2)*pow(x3,5) + 28*pow(x3,6) + 
				            15*pow(x0,4)*(3*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) - 5*(x1 + x2)*x3 + 2*pow(x3,2)) + 4*pow(x0,3)*(-6*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2)) + 
			                27*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*x3 - 30*(x1 + x2)*pow(x3,2) + 10*pow(x3,3)) - 6*x0*(x1 + x2 - x3)*(42*pow(x1,2)*pow(x2,2) - 42*x1*x2*(x1 + x2)*x3 + 
				            6*(2*pow(x1,2) + 9*x1*x2 + 2*pow(x2,2))*pow(x3,2) - 18*(x1 + x2)*pow(x3,3) + 7*pow(x3,4)) + 3*pow(x0,2)*(42*x1*x2*(pow(x1,2) + 3*x1*x2 + pow(x2,2)) - 
				            18*(x1 + x2)*(pow(x1,2) + 8*x1*x2 + pow(x2,2))*x3 + 54*(pow(x1,2) + 3*x1*x2 + pow(x2,2))*pow(x3,2) - 50*(x1 + x2)*pow(x3,3) + 15*pow(x3,4))) + 
		                    v1*(x0 - x2)*pow(x0 - x3,2)*(3*pow(x0,5) - 126*pow(x1,2)*pow(x2,3) - 5*pow(x0,4)*(2*x1 + 3*x2 - 2*x3) + 84*x1*pow(x2,2)*(3*x1 + 2*x2)*x3 - 
			                60*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2))*pow(x3,2) + 45*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,3) - 35*(2*x1 + 3*x2)*pow(x3,4) + 28*pow(x3,5) + 
				            pow(x0,3)*(9*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2)) - 16*(2*x1 + 3*x2)*x3 + 20*pow(x3,2)) + 3*pow(x0,2)*(-6*x2*(3*pow(x1,2) + 6*x1*x2 + pow(x2,2)) + 
				            9*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*x3 - 10*(2*x1 + 3*x2)*pow(x3,2) + 10*pow(x3,3)) + x0*(42*x1*pow(x2,2)*(3*x1 + 2*x2) - 48*x2*(3*pow(x1,2) + 
			                6*x1*x2 + pow(x2,2))*x3 + 45*(pow(x1,2) + 6*x1*x2 + 3*pow(x2,2))*pow(x3,2) - 40*(2*x1 + 3*x2)*pow(x3,3) + 
				            35*pow(x3,4))))))/((x0 - x1)*(x0 - x2)*(x1 - x2)*pow(x1 - x3,3)*pow(x2 - x3,3));
		     break;
	     }//case 3
	}//Switch


	return matV;
}
#endif // _MOD_POTENTIAL_MATRICES_H_
